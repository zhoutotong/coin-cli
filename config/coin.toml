[system.code_server]
    url = ''
    authorize = ''

[solution.detection]


[packages.default]
    [packages.default.numpy.install]
        type = "py"
        is_exist = "python3 -c \"import numpy\""
    [packages.default.onnx.install]
        type = 'py'
        is_exist = "python3 -c \"import onnx\""

    [packages.default.distro.install]
        type = 'py'
        is_exist = "python3 -c \"import distro\""

    [packages.default.ultralytics.install]
        type = 'py'
        is_exist = "python3 -c \"import ultralytics\""

    [packages.default.ollama]
        dep = ['pciutils', 'curl']
    [packages.default.ollama.install]
        type = 'url'
        cmd = 'curl -fsSL https://ollama.com/install.sh | sh'
        is_exist = "ollama --version"

    [packages.default.deepseek-r1]
        dep = ['ollama']
        desc = 'DeepSeek R1 is a deep learning model. It is a 7b version of the model.'
    [packages.default.deepseek-r1.install]
        type = 'cmd'
        cmd = 'ollama pull deepseek-r1'
        is_exist = "ollama show deepseek-r1"

    [packages.default.deepseek-r1.run]
        cmd = 'ollama run deepseek-r1:7b'

    [packages.default.curl]
        desc = 'curl is a command-line tool for transferring data with URL syntax.'
    [packages.default.curl.install]
        type = 'apt'
        cmd = '@sudo apt-get install -y curl'
        need_root = true
        is_exist = "command -v curl"

    [packages.default.ca-certificates]
        desc = 'ca-certificates is a package that contains the set of CA certificates chosen by the Mozilla Foundation for use with the Internet PKI.'
    [packages.default.ca-certificates.install]
        type = 'apt'
        cmd = '@sudo apt-get install ca-certificates'
        need_root = true
        is_exist = "command -v update-ca-certificates"

    [packages.default.docker]
        dep = ['curl', 'ca-certificates']
        desc = 'Docker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers.'
    [packages.default.docker.install]
        type = 'cmd'
        cmd = ['@sudo install -m 0755 -d /etc/apt/keyrings',
                '@sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc',
                '@sudo chmod a+r /etc/apt/keyrings/docker.asc',
                """echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | @sudo tee /etc/apt/sources.list.d/docker.list > /dev/null""",
                '@sudo apt-get update',
                '@sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin']
        need_root = true
        is_exist = "command -v docker"

    [packages.default.pciutils]
        desc = 'pciutils is a set of utilities for displaying information about PCI buses in the system and devices connected to them.'
    [packages.default.pciutils.install]
        type = "apt"
        cmd = '@sudo apt-get install -y pciutils'
        need_root = true

