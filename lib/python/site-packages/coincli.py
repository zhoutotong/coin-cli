# -*- coding: utf-8 -*-
#ÔºÅ/bin/env python3
import argparse
import subprocess
import toml
from coin import install, run

def version():
    return '0.0.1'

class RunAction(argparse.Action):
    def __init__(self, option_strings, dest, nargs = None, const = None, default = None, type = None, choices = None, required = False, help = None, metavar = None):
        super().__init__(option_strings, dest, nargs, const, default, type, choices, required, help, metavar)
    def __call__(self, parser, namespace, values, option_string=None):
        namespace.run = values
        run.run(values)

class InstallAction(argparse.Action):
    def __init__(self, option_strings, dest, nargs = None, const = None, default = None, type = None, choices = None, required = False, help = None, metavar = None):
        super().__init__(option_strings, dest, nargs, const, default, type, choices, required, help, metavar)
    def __call__(self, parser, namespace, values, option_string=None):
        namespace.run = values
        install.install(values)

def execute():
    parser = argparse.ArgumentParser(description='Coin Command Line Interface')
    parser.add_argument('-v', '--version', action='version', version='%(prog)s ' + version())
    
    sub_parser = parser.add_subparsers(dest='')
    run = sub_parser.add_parser('run', help='run command')
    run.add_argument('*', nargs=argparse.REMAINDER, action=RunAction)
    
    install = sub_parser.add_parser('install', help='install command')
    install.add_argument('*', nargs=argparse.REMAINDER, action=InstallAction)
    
    parser.parse_args()

if __name__ == "__main__":
    print(version())
