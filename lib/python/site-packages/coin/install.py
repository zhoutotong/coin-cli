# -*- coding: utf-8 -*-
#ÔºÅ/bin/env python3
import os
import coin.utils
import coin.config
import pip

def resolve_deps(deps):
    install(deps)

def install_pypkg(pkg):
    if 'dep' in pkg:
        deps = pkg['dep']
        resolve_deps(deps)
    name = pkg['name']
    if 'version' in pkg:
        name = f"{name}=={pkg['version']}"
    pip.main(['install', name])

def install_cpppkg(pkg):
    if 'dep' in pkg:
        deps = pkg['dep']
        resolve_deps(deps)

def install_coinpkg(pkg):
    if 'dep' in pkg:
        deps = pkg['dep']
        resolve_deps(deps)

def install_aptpkg(pkg):
    if 'dep' in pkg:
        deps = pkg['dep']
        resolve_deps(deps)
    name = pkg['name']
    if 'cmd' in pkg:
        cmd = pkg['cmd']
        os.system(cmd)
    else:
        os.system(f"sudo apt-get install -y {name}")

def install_urlpkg(pkg):
    if 'dep' in pkg:
        deps = pkg['dep']
        resolve_deps(deps)
    name = pkg['name']
    if 'cmd' in pkg:
        cmd = pkg['cmd']
        os.system(cmd)
    else:
        coin.utils.error(f"package {name} not supported")

def install_cmdpkg(pkg):
    if 'dep' in pkg:
        deps = pkg['dep']
        print(deps)
        resolve_deps(deps)
    name = pkg['name']
    if 'cmd' in pkg:
        cmd = pkg['cmd']
        os.system(cmd)
    else:
        coin.utils.error(f"package {name} not supported")

install_table = {
    'py': install_pypkg,
    'cpp': install_cpppkg,
    'coin': install_coinpkg,
    'apt': install_aptpkg,
    'cmd': install_cmdpkg,
    'url': install_urlpkg
}

def install(name):
    """
    Installs a list of packages by reading their configuration and executing the
    appropriate installation procedure based on the package type.

    Parameters:
    name (list): A list of package names to be installed.

    The function iterates over each package name, loading its configuration and
    determining its type. If the package or its type is not found, an error message
    is displayed. Otherwise, it uses the corresponding function from the
    install_table to perform the installation. If a description is available in the
    package information, it is displayed after installation.
    """

    config = coin.config.Configration()
    config.load()
    
    num = len(name)
    cnt = 0
    for n in name:
        cnt = cnt + 1
        coin.utils.info(f"installing package {n} [{cnt}/{num}]")
        pkg_info = config.read_package(n)
        if not pkg_info:
            coin.utils.error(f"package {n} not found")
            return
        
        install_info = pkg_info['install']
        
        pkg_type = install_info['type']
        if pkg_type not in install_table:
            coin.utils.error(f"package type [{pkg_type}] not supported")
            return

        install_info['name'] = n
        if 'dep' in pkg_info:
            install_info['dep'] = pkg_info['dep']
        if 'desc' in pkg_info:
            install_info['desc'] = pkg_info['desc']
            
        if 'desc' in pkg_info:
            coin.utils.info('------------------------------------')
            coin.utils.info(pkg_info['desc'])
            coin.utils.info('------------------------------------')

        install_table[pkg_type](install_info)
        
        coin.utils.info(f"package {n} installed")
