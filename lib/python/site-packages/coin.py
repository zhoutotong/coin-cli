# -*- coding: utf-8 -*-
#ÔºÅ/bin/env python3
import os
import argparse
import subprocess
import toml

def version():
    return '0.0.1'

# log out info message, color with green
def info(msg):
    print(f"\033[32m" + {msg} + "\033[0m")
    
# log out error message, color with red
def error(msg):
    print(f"\033[31m" + {msg} + "\033[0m")
    
# log out warn message, color with yellow
def warn(msg):
    print(f"\033[33m" + {msg} + "\033[0m")

class Configration:
    def __init__(self, cfg_file = os.path.join(os.environ['COIN_ROOT'], 'config/coin.toml')):
        self.cfg_file = cfg_file
        self.config = None

    def load(self):
        self.config = toml.load(self.cfg_file)
    
    def save(self):
        with open(self.cfg_file, 'w') as f:
            toml.dump(self.config, f)

class RunAction(argparse.Action):
    def __init__(self, option_strings, dest, nargs = None, const = None, default = None, type = None, choices = None, required = False, help = None, metavar = None):
        super().__init__(option_strings, dest, nargs, const, default, type, choices, required, help, metavar)
    def __call__(self, parser, namespace, values, option_string=None):
        namespace.run = values
        ret = subprocess.run(values)
        info('Done.')

def execute():
    parser = argparse.ArgumentParser(description='Coin Command Line Interface')
    parser.add_argument('-v', '--version', action='version', version='%(prog)s ' + version())
    
    sub_parser = parser.add_subparsers(dest='')
    run = sub_parser.add_parser('run', help='run command')
    run.add_argument('*', nargs=argparse.REMAINDER, action=RunAction)
    parser.parse_args()

if __name__ == "__main__":
    print(version())
